{"version":3,"sources":["Components/RepoInfo.js","Components/MainPage.js","App.js","index.js"],"names":["RepoInfo","id","useParams","React","useState","repos","setRepos","useEffect","fetch","then","response","json","data","console","log","catch","err","className","name","url","visibility","node_id","watchers","MainPage","inputValue","setinputValue","isLoading","setIsLoading","setError","userNameQuery","setUserNamrQuery","Filter","items","align","onChange","evt","target","value","type","placeholder","map","repo","to","description","forks_count","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRA+CeA,EA1CE,WAEb,IAAOC,EAAKC,cAALD,GAEP,EAAyBE,IAAMC,SAAS,MAAxC,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAlBAH,IAAMI,WAAU,WACZC,MAAM,uCAAD,OAAwCP,EAAxC,KAA+C,IAEpDQ,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZN,EAASM,MAGVG,OAAM,SAAAC,GACLH,QAAQC,IAAIE,QAIZ,CAACf,IAGF,qBAAKgB,UAAU,UAAf,SACKZ,EAAS,sBAAKY,UAAU,MAAf,UACF,6BAAKZ,EAAMa,OACX,+BACI,6BAAKb,EAAMc,MACX,6BAAKd,EAAMe,aACX,6BAAKf,EAAMgB,UACX,6BAAKhB,EAAMiB,iBAIlBT,QAAQC,IAAIb,MCsCZsB,MA1EjB,WACI,MAAoCpB,IAAMC,SAAS,IAAnD,mBAAOoB,EAAP,KAAmBC,EAAnB,KACA,EAAyBtB,IAAMC,SAAS,IAAxC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCH,IAAMC,UAAS,GAAjD,mBAAOsB,EAAP,KAAkBC,EAAlB,KACA,EAA0BxB,IAAMC,UAAS,GAAzC,mBAAcwB,GAAd,WACA,EAAyCzB,IAAMC,SAAS,MAAxD,mBAAOyB,EAAP,KAAsBC,EAAtB,KAGF,SAASC,IACNvB,MAAM,gDAAD,OAAiDgB,GAAjD,OAA8DK,EAAe,SAAWA,EAAc,IAAM,IAGjHpB,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZe,GAAa,GACbrB,EAASM,EAAKoB,UAEfjB,OAAM,SAAAC,GACLH,QAAQC,IAAIE,GACZW,GAAa,GACbC,GAAS,MAkBX,OAbDzB,IAAMI,WAAU,WACViB,IAGJG,GAAa,GACbI,OACA,CAACP,IAEHrB,IAAMI,WAAU,WACfwB,MAEC,CAACF,IAGA,sBAAKZ,UAAU,MAAf,UACE,oBAAIgB,MAAM,SAAV,2BACA,sBAAMC,SAAU,SAAAC,GAChBV,EAAcU,EAAIC,OAAOC,QADzB,SAGA,uBAAOpB,UAAU,cAAcqB,KAAK,OAAOpB,KAAK,QAAQqB,YAAY,qKAEpE,oBAAIN,MAAM,SAAV,0EACA,uBAAQhB,UAAU,eAAeiB,SAAU,SAAAC,GAC3CL,EAAiBK,EAAIC,OAAOC,QACzBC,KAAK,OAAOpB,KAAK,QAAQqB,YAAY,gLACvCb,EAAY,qBAAKT,UAAU,UAAf,qBAAyC,6BACnDZ,EACDA,EAAMmC,KAAI,SAAAC,GACR,OACI,qBAAKxB,UAAU,QAAf,SACJ,eAAC,IAAD,CAAqByB,GAAE,gBAAYD,EAAKxC,IAAxC,UACG,kCAAKwC,EAAKvB,QACV,4BAAIuB,EAAKE,cACT,wGAAyBF,EAAKG,iBAHrBH,EAAKxC,SAOf,WCpDC4C,MAbf,WACC,OACC,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAKC,QAAS,cAAC,EAAD,MAC1B,cAAC,IAAD,CAAOD,KAAK,YAAaC,QAAS,cAAC,EAAD,YCHxCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.6c6b95a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport '../Components/Repo-info.css'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst RepoInfo = () =>\r\n{\r\n    const {id}= useParams();\r\n    \r\n    const [repos, setRepos]= React.useState(null);\r\n\r\n    React.useEffect(()=>{\r\n        fetch(`https://api.github.com/repositories/${id}}`, {\r\n        })\r\n       .then((response) => {\r\n         return response.json();\r\n       })\r\n       .then((data) => {\r\n         console.log(data);\r\n         setRepos(data)\r\n        \r\n       })\r\n       .catch(err=>{\r\n         console.log(err)\r\n      \r\n       }) \r\n      \r\n       },[id])\r\n    \r\n    return (\r\n        <div className='newPage'>\r\n            {repos ?  <div className='asd'>\r\n                    <h1>{repos.name}</h1>\r\n                    <ul>\r\n                        <li>{repos.url}</li>\r\n                        <li>{repos.visibility}</li>\r\n                        <li>{repos.node_id}</li>\r\n                        <li>{repos.watchers}</li>\r\n                    </ul>\r\n\r\n                </div>\r\n                :console.log(id) }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default RepoInfo;","import React from 'react';\r\nimport '../App.css';\r\nimport {Link} from 'react-router-dom';\r\nimport RepoInfo from './RepoInfo';\r\n\r\nfunction MainPage() {\r\n    const [inputValue, setinputValue] = React.useState(\"\");\r\n    const [repos, setRepos]= React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [error, setError] = React.useState(false);\r\n    const [userNameQuery, setUserNamrQuery]= React.useState(null);\r\n   \r\n  \r\n  function Filter(){\r\n     fetch(`https://api.github.com/search/repositories?q=${inputValue}${userNameQuery? ' user:' + userNameQuery:\"\"}`, {\r\n   \r\n     })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      console.log(data);\r\n      setIsLoading(false);\r\n      setRepos(data.items);\r\n    })\r\n    .catch(err=>{\r\n      console.log(err)\r\n      setIsLoading(false);\r\n      setError(true);\r\n    }) \r\n    return;\r\n  }\r\n  \r\n   React.useEffect(()=>{\r\n     if(!inputValue){\r\n       return;\r\n     }\r\n     setIsLoading(true);\r\n     Filter();\r\n   },[inputValue])\r\n   \r\n   React.useEffect(()=>{\r\n    Filter();\r\n  \r\n   },[userNameQuery])\r\n  \r\n    return (\r\n      <div className='app'>\r\n        <h1 align=\"center\">GitHub Search</h1>\r\n        <form onChange={evt=>{\r\n        setinputValue(evt.target.value);\r\n        }} >\r\n        <input className='form__input' type=\"text\" name=\"query\" placeholder=\"Введите название репозитория\"/>\r\n        </form>\r\n        <h2 align=\"center\">Фильтрация</h2>\r\n        <input  className='form__input2' onChange={evt=>{\r\n        setUserNamrQuery(evt.target.value);\r\n        }} type='text' name='query' placeholder=\"Введети полное имя пользователя\"/>\r\n        {isLoading ? <div className='loading'>Loading</div> : <ul>\r\n          {repos ? \r\n          repos.map(repo=>{\r\n            return (\r\n                <div className='newli'>\r\n            <Link  key={repo.id} to ={`/repo/${repo.id}`}>\r\n               <a> {repo.name}</a>\r\n               <p>{repo.description}</p>\r\n               <p> Количество forks  = {repo.forks_count}</p>\r\n            </Link> \r\n            </div>\r\n            )\r\n          }): null}\r\n          \r\n        </ul>}\r\n          \r\n  \r\n      </div>\r\n      \r\n    );\r\n  }\r\n  export default MainPage;\r\n  ","import React from 'react';\nimport MainPage from './Components/MainPage';\nimport {Routes, Route , Link} from 'react-router-dom';\nimport RepoInfo from './Components/RepoInfo';\n\nfunction App() {\n return (\n  <div>\n    <Routes>\n      <Route path=\"/\"  element={<MainPage/>} />\n      <Route path=\"/repo/:id\"  element={<RepoInfo/>} />\n    </Routes>\n  \n  </div>\n )\n    \n  \n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}